Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

A: Without diff, I would have had to manually look through both documents, 
but diff presented me with only the lines that were different, making finding the bug easier.

Q: How could having easy access to the entire history of a file make you a more efficient 
programmer in the long term?

A: A bug might sneak inside a program and not make itself apparent until many version later.
Having the entire file history would make it easier to find and fix the problem in such a case.
In addition, having access to the entire history of a file might help me avoid making
the same mistakes twice.

Q: What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?

A: Pros: You can make more logically consistent choices on when to commit, since 
you get to choose the proper size of the commit. Cons: You might forget to commit
when it's time to.

Q: Why do you think some version control systems, like Git, allow saving multiple files 
in one commit, while others, like Google Docs, treat each file separately?

A: I would imagine a large part of the reason is that Git is used primarily by
programmers, and code projects often involve interdependent files. Google Docs is likely
used for a wider variety of projects, in which multiple files are less likely to be
interdependent, and therefore less in need of being saved simultaneously,
than in programming projects.

Q: How can you use the commands git log and git diff to view the history of files?

A: git log displays the commit history, with IDs, notes, author and time of commit info.
git diff is used to view the specific differences, line by line, between two versions of the file.

Q: How might using version control make you more confident to make changes that could break something?

A: If using version control, fixing code-breaking changes is trivial, which would
make you more confident to make changes that could break something.

Q: Now that you have your workspace set up, what do you want to try using Git for?

A: I'd like to use Git as version control for the small personal projects
that I'm working on.